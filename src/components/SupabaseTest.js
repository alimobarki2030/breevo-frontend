import React, { useState, useEffect } from 'react'
import { database, auth } from '../config/supabase'

// ูููู ุงุฎุชุจุงุฑ ุณุฑูุน ูู Supabase
export default function SupabaseTest() {
  const [status, setStatus] = useState('ุฌุงุฑู ุงูุชุญููู...')
  const [results, setResults] = useState([])
  const [user, setUser] = useState(null)

  const addResult = (test, success, message, data = null) => {
    const result = { 
      test, 
      success, 
      message, 
      data,
      time: new Date().toLocaleTimeString() 
    }
    setResults(prev => [...prev, result])
    console.log(success ? 'โ' : 'โ', test, ':', message)
  }

  const runTests = async () => {
    setResults([])
    setStatus('๐งช ุฌุงุฑู ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช...')

    try {
      // ุงุฎุชุจุงุฑ 1: ูุชุบูุฑุงุช ุงูุจูุฆุฉ
      const supabaseUrl = process.env.REACT_APP_SUPABASE_URL
      const supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY
      
      if (supabaseUrl && supabaseKey) {
        addResult('ูุชุบูุฑุงุช ุงูุจูุฆุฉ', true, 'โ ุฌููุน ุงููุชุบูุฑุงุช ููุฌูุฏุฉ')
      } else {
        addResult('ูุชุบูุฑุงุช ุงูุจูุฆุฉ', false, 'โ ูุชุบูุฑุงุช ููููุฏุฉ')
        setStatus('โ ูุดู ูู ุงูุงุฎุชุจุงุฑุงุช')
        return
      }

      // ุงุฎุชุจุงุฑ 2: ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
      addResult('ุงุฎุชุจุงุฑ ุงูุงุชุตุงู', false, 'โณ ุฌุงุฑู ุงูุงุชุตุงู...')
      
      const { data: plans, error: plansError } = await database.getPricingPlans()
      
      if (plansError) {
        addResult('ุงุฎุชุจุงุฑ ุงูุงุชุตุงู', false, `โ ${plansError.message}`)
      } else {
        addResult('ุงุฎุชุจุงุฑ ุงูุงุชุตุงู', true, `โ ูุชุตู - ${plans?.length || 0} ุฎุทุท`, plans)
      }

      // ุงุฎุชุจุงุฑ 3: ุงูุชุญูู ูู ุงูุจูุงูุงุช
      if (plans && plans.length > 0) {
        const freeplan = plans.find(p => p.name === 'free')
        if (freeplan) {
          addResult('ุงูุชุญูู ูู ุงูุจูุงูุงุช', true, 'โ ุงูุฎุทุฉ ุงููุฌุงููุฉ ููุฌูุฏุฉ', freeplan)
        } else {
          addResult('ุงูุชุญูู ูู ุงูุจูุงูุงุช', false, 'โ ุงูุฎุทุฉ ุงููุฌุงููุฉ ุบูุฑ ููุฌูุฏุฉ')
        }
      }

      // ุงุฎุชุจุงุฑ 4: ุงููุตุงุฏูุฉ (ุจุฏูู ุชุณุฌูู ุฏุฎูู)
      const { user: currentUser, error: userError } = await auth.getCurrentUser()
      
      if (userError && !userError.message.includes('session_not_found')) {
        addResult('ูุธุงู ุงููุตุงุฏูุฉ', false, `โ ${userError.message}`)
      } else {
        if (currentUser) {
          addResult('ูุธุงู ุงููุตุงุฏูุฉ', true, `โ ูุณุชุฎุฏู ูุณุฌู: ${currentUser.email}`, currentUser)
          setUser(currentUser)
        } else {
          addResult('ูุธุงู ุงููุตุงุฏูุฉ', true, 'โ ูุธุงู ุงููุตุงุฏูุฉ ูุนูู (ูุง ููุฌุฏ ูุณุชุฎุฏู)')
        }
      }

      // ุงุฎุชุจุงุฑ 5: ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุณุฌูุ ุงุฎุชุจุฑ ุงูููุชุฌุงุช
      if (currentUser) {
        const { data: products, error: productsError } = await database.getProducts()
        
        if (productsError) {
          addResult('ุงูููุชุฌุงุช', false, `โ ${productsError.message}`)
        } else {
          addResult('ุงูููุชุฌุงุช', true, `โ ${products?.length || 0} ููุชุฌ ูุญููุธ`, products)
        }
      }

      setStatus('โ ุงูุชููุช ุฌููุน ุงูุงุฎุชุจุงุฑุงุช!')

    } catch (error) {
      addResult('ุฎุทุฃ ุนุงู', false, `โ ${error.message}`)
      setStatus('โ ูุดู ูู ุงูุงุฎุชุจุงุฑุงุช')
    }
  }

  // ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช ุนูุฏ ุงูุชุญููู
  useEffect(() => {
    runTests()
  }, [])

  return (
    <div className="max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg m-6">
      <div className="text-center mb-6">
        <h1 className="text-3xl font-bold text-gray-800 mb-2">๐งช ุงุฎุชุจุงุฑ Supabase</h1>
        <p className="text-gray-600">{status}</p>
      </div>

      {/* ุฃุฒุฑุงุฑ ุงูุชุญูู */}
      <div className="text-center mb-6">
        <button
          onClick={runTests}
          className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium mr-3"
        >
          ๐ ุฅุนุงุฏุฉ ุงูุงุฎุชุจุงุฑ
        </button>
        
        {user && (
          <span className="bg-green-100 text-green-800 px-4 py-2 rounded-lg">
            ๐ค ูุฑุญุจุงู {user.email}
          </span>
        )}
      </div>

      {/* ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑุงุช */}
      {results.length > 0 && (
        <div className="space-y-3">
          <h2 className="text-xl font-semibold mb-4">๐ ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑุงุช:</h2>
          
          {results.map((result, index) => (
            <div
              key={index}
              className={`p-4 rounded-lg border-l-4 ${
                result.success 
                  ? 'bg-green-50 border-green-500 text-green-800' 
                  : 'bg-red-50 border-red-500 text-red-800'
              }`}
            >
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <strong>{result.test}:</strong>
                  <p className="mt-1 text-sm">{result.message}</p>
                  
                  {/* ุฅุธูุงุฑ ุงูุจูุงูุงุช ุฅุฐุง ูุงูุช ููุฌูุฏุฉ */}
                  {result.data && (
                    <details className="mt-2">
                      <summary className="cursor-pointer text-xs opacity-75 hover:opacity-100">
                        ุนุฑุถ ุงูุจูุงูุงุช...
                      </summary>
                      <pre className="mt-2 text-xs bg-gray-100 p-2 rounded overflow-auto max-h-32">
                        {JSON.stringify(result.data, null, 2)}
                      </pre>
                    </details>
                  )}
                </div>
                <span className="text-xs opacity-75 ml-4">{result.time}</span>
              </div>
            </div>
          ))}

          {/* ุฎูุงุตุฉ ุงููุชุงุฆุฌ */}
          <div className="mt-6 p-4 bg-blue-50 rounded-lg border">
            <h3 className="font-semibold text-blue-900 mb-2">๐ ุงูุฎูุงุตุฉ:</h3>
            <div className="grid grid-cols-3 gap-4 text-sm text-blue-800">
              <div>โ ูุฌุญ: {results.filter(r => r.success).length}</div>
              <div>โ ูุดู: {results.filter(r => !r.success).length}</div>
              <div>๐ ุงููุฌููุน: {results.length}</div>
            </div>
            
            {results.filter(r => r.success).length === results.length && results.length > 0 && (
              <div className="mt-3 p-3 bg-green-100 rounded border border-green-300">
                <p className="font-semibold text-green-800">
                  ๐ ููุชุงุฒ! ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช - Supabase ุฌุงูุฒ ููุงุณุชุฎุฏุงู!
                </p>
              </div>
            )}
          </div>
        </div>
      )}

      {/* ูุนูููุงุช ุฅุถุงููุฉ */}
      <div className="mt-8 p-4 bg-gray-50 rounded-lg text-sm text-gray-600">
        <h4 className="font-semibold mb-2">โน๏ธ ูุนูููุงุช ุงูุงุฎุชุจุงุฑ:</h4>
        <ul className="space-y-1 text-xs">
          <li>โข ูุชุญูู ูู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช</li>
          <li>โข ูุฎุชุจุฑ ูุฌูุฏ ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ</li>
          <li>โข ูุชุญูู ูู ูุธุงู ุงููุตุงุฏูุฉ</li>
          <li>โข ุขูู ููุงุณุชุฎุฏุงู - ูุง ููุนุฏู ุฃู ุจูุงูุงุช</li>
        </ul>
      </div>
    </div>
  )
}